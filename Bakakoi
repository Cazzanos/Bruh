local CoreGui = game:GetService("StarterGui")
local Players = game:GetService("Players")
local speaker = Players.LocalPlayer

local function isNumber(str)
  if tonumber(str) ~= nil or str == 'inf' then
    return true
  end
end

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Vcsk/UI-Library/main/Source/MyUILib(Unamed).lua"))();
local Window = Library:Create("Basement Hub")

local ToggleGui = Instance.new("ScreenGui")
local Toggle = Instance.new("TextButton")

ToggleGui.Name = "ToggleGui_HE"
ToggleGui.Parent = game.CoreGui

Toggle.Name = "Toggle"
Toggle.Parent = ToggleGui
Toggle.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
Toggle.BackgroundTransparency = 0.660
Toggle.Position = UDim2.new(0, 0, 0.454706937, 0)
Toggle.Size = UDim2.new(0.0650164187, 0, 0.0888099447, 0)
Toggle.Font = Enum.Font.SourceSans
Toggle.Text = "Toggle"
Toggle.TextScaled = true
Toggle.TextColor3 = Color3.fromRGB(40, 40, 40)
Toggle.TextSize = 24.000
Toggle.TextXAlignment = Enum.TextXAlignment.Left
Toggle.Active = true
Toggle.Draggable = true
Toggle.MouseButton1Click:connect(function()
    Library:ToggleUI()
end)

local HomeTab = Window:Tab("Home","rbxassetid://10888331510")
local PlayerTab = Window:Tab("Players","rbxassetid://12296135476")

--HomeTab:InfoLabel("discord in the next update!")

HomeTab:Section("silent aim")

HomeTab:Toggle("silent aim gun", function(state)
getgenv().SilentAimEnabled = state
end)

HomeTab:Toggle("only visible", function(state)
getgenv().VisibilityCheck = state
end)

HomeTab:Toggle("auto fire", function(state)
getgenv().AutoFireEnabled = state
end)

HomeTab:Toggle("autoEquip (for auto fire)", function(state)
getgenv().AutoEquipEnabled = state
end)

HomeTab:Section("kill")

HomeTab:Button("kill all", function()
    local Players = game:GetService("Players")
local LPlayer = Players.LocalPlayer
local ShootRemote = game:GetService("ReplicatedStorage").Remotes.Shoot
local range = 200 -- Raza de acțiune

-- Funcție pentru a verifica dacă un jucător are Highlight
local function shouldIgnorePlayer(player)
    return player.Character and player.Character:FindFirstChild("Highlight")
end

-- Găsim o armă în backpack-ul jucătorului local
local function FindWeapon()
    for _, tool in pairs(LPlayer.Backpack:GetChildren()) do
        if tool:IsA("Tool") and tool:FindFirstChild("Fire") then
            return tool
        end
    end
    return nil
end

-- Funcție pentru a trimite un atac către un jucător
local function fireAtPlayer(player, weapon)
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local args = {
            [1] = LPlayer.Character.HumanoidRootPart.Position,
            [2] = player.Character.HumanoidRootPart.Position,
            [3] = player.Character.HumanoidRootPart.Part,
            [4] = (LPlayer.Character.HumanoidRootPart.Position + player.Character.HumanoidRootPart.Position) / 2
        }
        ShootRemote:FireServer(unpack(args))
    end
end

-- Funcție pentru a ataca toți jucătorii eligibili din raza specificată
local function attackNearbyPlayers()
    -- Găsim și echipăm arma
    local weapon = FindWeapon()
    if weapon and not weapon.Parent:IsA("Model") then
        LPlayer.Character.Humanoid:EquipTool(weapon)
    end

    -- Parcurgem toți jucătorii
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LPlayer and player.Character and player.Character:FindFirstChild("Humanoid") then
            if player.Character.Humanoid.Health > 0 and not shouldIgnorePlayer(player) then
                local distance = (LPlayer.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
                if distance <= range then
                    fireAtPlayer(player, weapon) -- Trimitem atac
                end
            end
        end
    end
end

-- Executăm scriptul
attackNearbyPlayers()
end)

HomeTab:Toggle("auto kill all", function(state)
    getgenv().AutoAttackEnabled = state
end)

HomeTab:Section("visuals")

HomeTab:Toggle("enable esp", function(state)
getgenv().ESPEnabled = state
end)

HomeTab:Toggle("esp name", function(state)
getgenv().ShowNames = state
end)

HomeTab:Toggle("esp distance", function(state)
getgenv().ShowDistance = state
end)

HomeTab:Toggle("has gun", function(state)
getgenv().ShowWeapon = state
end)

HomeTab:Toggle("line esp", function(state)
getgenv().LineESP = state
end)

HomeTab:Toggle("box esp", function(state)
getgenv().BoxESP = state
end)

HomeTab:Toggle("team check", function(state)
getgenv().TeamCheck = state
end)

PlayerTab:Section("lock character")

PlayerTab:InfoLabel("lock character to look on closest player")

PlayerTab:Toggle("lock on a closest player", function(lockon)
getgenv().lookAtEnabled = lockon
end)

PlayerTab:Toggle("wall check", function(wallchecks)
getgenv().wallCheckEnabled = wallchecks
end)

pcall(function()
-- Toggles
getgenv().SilentAimEnabled = false -- Toggle pentru Silent Aim
getgenv().IgnoreHighlighted = true  -- Ignoră jucătorii cu Highlight în Character
getgenv().AutoFireEnabled = false   -- Toggle pentru Auto Fire
getgenv().AutoEquipEnabled = false  -- Toggle pentru echiparea automată a tool-ului
getgenv().VisibilityCheck = false   -- Verifică dacă jucătorii sunt vizibili înainte de a trage

-- Variabile generale
local Players = game:GetService("Players")
local LPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local ShootRemote = game:GetService("ReplicatedStorage").Remotes.Shoot

-- Funcție pentru a verifica dacă un jucător are `Highlight` în Character
local function shouldIgnorePlayer(player)
    return player.Character and player.Character:FindFirstChild("Highlight")
end

-- Funcție pentru a găsi cel mai apropiat jucător
local function GetClosestPlayer()
    local closestDistance = math.huge
    local closestPlayer = nil

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LPlayer and player.Character and player.Character:FindFirstChild("Humanoid") and player.Character.Humanoid.Health > 0 then
            if shouldIgnorePlayer(player) then
                continue
            end

            -- Dacă VisibilityCheck este activat, ignoră jucătorii din spatele pereților
            if getgenv().VisibilityCheck then
                local head = player.Character:FindFirstChild("Head")
                if head then
                    local ray = Ray.new(Camera.CFrame.Position, (head.Position - Camera.CFrame.Position).Unit * 500)
                    local part = workspace:FindPartOnRay(ray, LPlayer.Character)
                    if part and not part:IsDescendantOf(player.Character) then
                        continue -- Jucătorul este după un perete
                    end
                end
            end

            -- Calculează distanța până la jucătorul local
            local distance = (LPlayer.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
            if distance < closestDistance then
                closestDistance = distance
                closestPlayer = player
            end
        end
    end
    return closestPlayer
end

-- Funcție pentru auto-echipare a tool-ului
local function AutoEquipTool()
    local equippedTool = LPlayer.Character:FindFirstChildOfClass("Tool")
    if not equippedTool then
        for _, tool in pairs(LPlayer.Backpack:GetChildren()) do
            if tool:IsA("Tool") and tool:FindFirstChild("Fire", true) then
                LPlayer.Character.Humanoid:EquipTool(tool)
                return tool -- Returnăm tool-ul echipat
            end
        end
    end
    return equippedTool -- Returnăm tool-ul deja echipat sau nil
end

-- Funcție pentru auto dezechipare
local function AutoUnequipTool()
    local equippedTool = LPlayer.Character:FindFirstChildOfClass("Tool")
    if equippedTool then
        equippedTool.Parent = LPlayer.Backpack
    end
end

-- Funcție de auto-fire (trage automat)
task.spawn(function()
    while true do
        if getgenv().AutoFireEnabled and getgenv().SilentAimEnabled then
            -- Găsim cel mai apropiat jucător
            local closestPlayer = GetClosestPlayer()

            if closestPlayer and closestPlayer.Character and closestPlayer.Character:FindFirstChild("HumanoidRootPart") then
                -- Echipează arma doar dacă AutoEquip este activat
                local tool
                if getgenv().AutoEquipEnabled then
                    tool = AutoEquipTool()
                else
                    tool = LPlayer.Character:FindFirstChildOfClass("Tool")
                end

                if tool and tool:FindFirstChild("Fire") then
                    -- Argumentele pentru evenimentul de tragere
                    local args = {
                        [1] = LPlayer.Character.HumanoidRootPart.Position, -- Poziția jucătorului local
                        [2] = closestPlayer.Character.HumanoidRootPart.Position, -- Ținta
                        [3] = closestPlayer.Character.HumanoidRootPart -- Țintim HumanoidRootPart
                    }
                    ShootRemote:FireServer(unpack(args))
                end

                -- Dezechipează arma dacă AutoEquip este activat
                if getgenv().AutoEquipEnabled then
                    AutoUnequipTool()
                end
            end
        end
        wait(0.1) -- Intervalul de tragere
    end
end)
end)

pcall(function()
getgenv().ESPEnabled = false  -- Toggle pentru activarea ESP
getgenv().ShowNames = false  -- Toggle pentru afișarea numelor
getgenv().ShowDistance = false  -- Toggle pentru afișarea distanței
getgenv().ShowWeapon = false  -- Toggle pentru afișarea armei echipate
getgenv().LineESP = false  -- Toggle pentru afișarea liniei de urmărire
getgenv().BoxESP = false  -- Toggle pentru afișarea ESP Box
getgenv().TeamCheck = false  -- Toggle pentru ignorarea colegilor de echipă
getgenv().MaxDistance = 120  -- Distanța maximă pentru ESP

local Players = game:GetService("Players")
local LPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local RunService = game:GetService("RunService")

-- Stocăm toate desenele active aici
local ESPObjects = {}

-- Funcție pentru a verifica dacă un jucător are un model în Workspace
local function HasWorkspaceModel(player)
    local model = workspace:FindFirstChild(player.Name)
    return model and model:IsA("Model")
end

-- Funcție pentru a verifica dacă jucătorul are un tool specificat (Revolver sau Knife)
local function PlayerHasWeapon(player)
    if player.Backpack or player.Character then
        local tools = player.Backpack:GetChildren()
        for _, tool in ipairs(tools) do
            if tool:FindFirstChild("Fire") then
                return true
            end
        end
        if player.Character then
            tools = player.Character:GetChildren()
            for _, tool in ipairs(tools) do
                if tool:FindFirstChild("Fire") then
                    return true
                end
            end
        end
    end
    return false
end

-- Funcție pentru a desena ESP-ul
local function DrawESP(player)
    if not HasWorkspaceModel(player) then
        return
    end

    local workspaceModel = workspace:FindFirstChild(player.Name)
    if not workspaceModel or not workspaceModel:FindFirstChild("HumanoidRootPart") then
        return
    end

    local humanoidRootPart = workspaceModel.HumanoidRootPart
    local head = workspaceModel:FindFirstChild("Head")

    if not head or not humanoidRootPart then
        return
    end

    local screenPos, onScreen = Camera:WorldToViewportPoint(humanoidRootPart.Position)
    local distance = (LPlayer.Character.HumanoidRootPart.Position - humanoidRootPart.Position).Magnitude

    -- Verificăm dacă jucătorul este în raza de acțiune
    if distance > getgenv().MaxDistance then
        return
    end

    -- Ignorăm colegii de echipă dacă este activ TeamCheck
    if getgenv().TeamCheck and player.Team == LPlayer.Team then
        return
    end

    -- Ignorăm jucătorii fără arme
    if not PlayerHasWeapon(player) then
        return
    end

    -- Inițializăm obiectele Drawing
    local objects = {}

    -- Desenăm box ESP (dreptunghi în jurul jucătorului)
    if getgenv().BoxESP and onScreen then
        local boxWidth = 50  -- Lățimea fixă a cutiei
        local boxHeight = 80  -- Înălțimea fixă a cutiei
        local boxColor = Color3.fromRGB(192, 192, 192)  -- Argintiu

        local box = Drawing.new("Square")
        box.Thickness = 1
        box.Color = boxColor
        box.Transparency = 1
        box.Size = Vector2.new(boxWidth, boxHeight)
        box.Position = Vector2.new(screenPos.X - boxWidth / 2, screenPos.Y - boxHeight / 2)
        box.Visible = true
        box.Filled = false
        table.insert(objects, box)
    end

    -- Desenăm numele jucătorului deasupra capului
    if getgenv().ShowNames and onScreen then
        local nameTag = Drawing.new("Text")
        nameTag.Text = player.Name
        nameTag.Size = 18
        nameTag.Center = true
        nameTag.Outline = true
        nameTag.Color = Color3.fromRGB(255, 255, 255)
        nameTag.Position = Vector2.new(screenPos.X, screenPos.Y - 50)
        nameTag.Visible = true
        table.insert(objects, nameTag)
    end

    -- Desenăm distanța sub picioarele jucătorului
    if getgenv().ShowDistance and onScreen then
        local distTag = Drawing.new("Text")
        distTag.Text = tostring(math.floor(distance)) .. " studs"
        distTag.Size = 16
        distTag.Center = true
        distTag.Outline = true
        distTag.Color = Color3.fromRGB(0, 255, 0)
        distTag.Position = Vector2.new(screenPos.X, screenPos.Y + 30)
        distTag.Visible = true
        table.insert(objects, distTag)
    end

    -- Desenăm arma echipată sub picioare
    if getgenv().ShowWeapon and onScreen then
        local weaponTag = Drawing.new("Text")
        weaponTag.Text = PlayerHasWeapon(player) and "Armed" or "Unarmed"
        weaponTag.Size = 16
        weaponTag.Center = true
        weaponTag.Outline = true
        weaponTag.Color = Color3.fromRGB(255, 255, 0)
        weaponTag.Position = Vector2.new(screenPos.X, screenPos.Y + 50)
        weaponTag.Visible = true
        table.insert(objects, weaponTag)
    end

    -- Desenăm linia de urmărire (tracer line)
    if getgenv().LineESP and onScreen then
        local tracer = Drawing.new("Line")
        tracer.From = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y)
        tracer.To = Vector2.new(screenPos.X, screenPos.Y)
        tracer.Color = Color3.fromRGB(255, 255, 255)
        tracer.Thickness = 1
        tracer.Visible = true
        table.insert(objects, tracer)
    end

    -- Stocăm desenele pentru jucătorul curent
    ESPObjects[player] = objects
end

-- Funcție pentru a șterge toate desenele
local function ClearESP()
    for _, objects in pairs(ESPObjects) do
        for _, drawing in pairs(objects) do
            drawing:Remove()
        end
    end
    ESPObjects = {}
end

-- Funcție care rulează pe fiecare frame pentru actualizarea ESP-ului
RunService.RenderStepped:Connect(function()
    if getgenv().ESPEnabled then
        ClearESP()  -- Ștergem desenele anterioare
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LPlayer then
                DrawESP(player)
            end
        end
    else
        ClearESP()  -- Oprirea ESP-ului și ștergerea desenelor active
    end
end)
end)

pcall(function()
getgenv().lookAtEnabled = false -- Toggle pentru activare/dezactivare
getgenv().wallCheckEnabled = false -- Toggle pentru verificarea zidurilor

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local RunService = game:GetService("RunService")

-- Verifică dacă jucătorul este valid
function isPlayerValid(player)
    local character = player.Character
    if not character or not character:FindFirstChild("HumanoidRootPart") or not character:FindFirstChild("Head") then
        return false
    end

    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if not humanoid or humanoid.Health <= 0 then
        return false
    end

    if getgenv().wallCheckEnabled then
        local distance = (character.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
        local ray = Ray.new(Camera.CFrame.Position, (character.HumanoidRootPart.Position - Camera.CFrame.Position).Unit * distance)
        local part = workspace:FindPartOnRay(ray, LocalPlayer.Character, false, true)
        if part and not part:IsDescendantOf(character) then
            return false
        end
    end

    return true
end

-- Obține cel mai apropiat jucător valid
function getClosestPlayer()
    local closestPlayer = nil
    local shortestDistance = math.huge

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and isPlayerValid(player) then
            local character = player.Character
            local distance = (character.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
            if distance < shortestDistance then
                closestPlayer = player
                shortestDistance = distance
            end
        end
    end

    return closestPlayer
end

-- Face jucătorul local să se uite la țintă
function lookAt(player)
    if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local targetPosition = player.Character.HumanoidRootPart.Position
        local myPosition = LocalPlayer.Character.HumanoidRootPart.Position
        local lookDirection = (targetPosition - myPosition).Unit
        LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(myPosition, myPosition + lookDirection)
    end
end

-- Monitorizează și actualizează direcția de privire
RunService.RenderStepped:Connect(function()
    if getgenv().lookAtEnabled then
        local target = getClosestPlayer()
        if target then
            lookAt(target)
        end
    end
end)
end)

pcall(function()
getgenv().AutoAttackEnabled = false  -- Toggle pentru activarea auto attack
local range = 200  -- Raza de acțiune

local Players = game:GetService("Players")
local LPlayer = Players.LocalPlayer
local ShootRemote = game:GetService("ReplicatedStorage").Remotes.Shoot
local Workspace = game:GetService("Workspace")

-- Găsim o armă în backpack-ul jucătorului local
local function FindWeapon()
    for _, tool in pairs(LPlayer.Backpack:GetChildren()) do
        if tool:IsA("Tool") and tool:FindFirstChild("Fire") then
            return tool
        end
    end
    return nil
end

-- Funcție pentru a trimite un atac către un jucător
local function fireAtPlayer(player)
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local args = {
            [1] = LPlayer.Character.HumanoidRootPart.Position,
            [2] = player.Character.HumanoidRootPart.Position,
            [3] = player.Character.HumanoidRootPart, -- Ținta
            [4] = (LPlayer.Character.HumanoidRootPart.Position + player.Character.HumanoidRootPart.Position) / 2
        }
        ShootRemote:FireServer(unpack(args))
    end
end

-- Funcție pentru a verifica dacă un jucător este eligibil
local function isEligiblePlayer(player)
    if player ~= LPlayer and player.Character and player.Character:FindFirstChild("Humanoid") then
        if player.Character.Humanoid.Health > 0 then
            -- Verificăm câte modele există în Workspace
            local count = 0
            for _, obj in pairs(Workspace:GetChildren()) do
                if obj.Name == player.Name then
                    count = count + 1
                end
            end
            return count == 1  -- Doar dacă există un singur model
        end
    end
    return false
end

-- Funcție pentru a ataca toți jucătorii eligibili din raza specificată
local function attackNearbyPlayers()
    local weapon = FindWeapon()

    if weapon then
        -- Echipăm arma dacă nu este deja echipată
        if weapon.Parent ~= LPlayer.Character then
            LPlayer.Character.Humanoid:EquipTool(weapon)
        end

        -- Parcurgem toți jucătorii
        for _, player in pairs(Players:GetPlayers()) do
            if isEligiblePlayer(player) then
                local distance = (LPlayer.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
                if distance <= range then
                    fireAtPlayer(player)  -- Trimitem atac
                end
            end
        end
    else
        warn("Nu s-a găsit nicio armă validă în Backpack!")
    end
end

-- Monitorizăm toggle-ul pentru auto attack
game:GetService("RunService").RenderStepped:Connect(function()
    if getgenv().AutoAttackEnabled then
        attackNearbyPlayers()
        task.wait(0.1)  -- Delay între atacuri
    end
end)
end)
